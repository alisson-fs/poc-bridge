{"ast":null,"code":"var _jsxFileName = \"/home/bridge/Documents/poc-bridge/src/components/CampoTexto.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function CampoTexto(props) {\n  const handleChange = event => {\n    props.onChange(event.currentTarget.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.for,\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 54\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: props.id,\n      name: props.name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 83\n    }, this)]\n  }, void 0, true);\n}\n_c = CampoTexto;\n\nvar _c;\n\n$RefreshReg$(_c, \"CampoTexto\");","map":{"version":3,"sources":["/home/bridge/Documents/poc-bridge/src/components/CampoTexto.tsx"],"names":["CampoTexto","props","handleChange","event","onChange","currentTarget","value","for","text","id","name"],"mappings":";;;AAUA,OAAO,SAASA,UAAT,CAAoBC,KAApB,EAA4C;AAEjD,QAAMC,YAAY,GAAIC,KAAD,IAA0C;AAC7DF,IAAAA,KAAK,CAACG,QAAN,CAAeD,KAAK,CAACE,aAAN,CAAoBC,KAAnC;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEL,KAAK,CAACM,GAAtB;AAAA,gBAA4BN,KAAK,CAACO;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eACiD;AAAA;AAAA;AAAA;AAAA,YADjD,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAEP,KAAK,CAACQ,EAA7B;AAAiC,MAAA,IAAI,EAAER,KAAK,CAACS,IAA7C;AAAmD,MAAA,QAAQ,EAAER;AAA7D;AAAA;AAAA;AAAA;AAAA,YAFF,eAE8E;AAAA;AAAA;AAAA;AAAA,YAF9E;AAAA,kBADF;AAMD;KAZeF,U","sourcesContent":["import { ChangeEvent } from \"react\";\n\ninterface CampoTextoProps {\n  for: string;\n  text: string;\n  id: string;\n  name: string;\n  onChange(formValue: string): void\n}\n\nexport function CampoTexto(props: CampoTextoProps) {\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    props.onChange(event.currentTarget.value)\n  }\n\n  return (\n    <>\n      <label htmlFor={props.for}>{props.text}</label><br />\n      <input type=\"text\" id={props.id} name={props.name} onChange={handleChange}/><br />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}