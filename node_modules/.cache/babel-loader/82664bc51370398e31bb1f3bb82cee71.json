{"ast":null,"code":"var _jsxFileName = \"/home/bridge/Documents/poc-bridge/src/components/Formulario.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { CampoTexto } from \"./CampoTexto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Imc(altura, peso) {\n  return altura / peso ** 2;\n}\n\n_c = Imc;\nexport function Formulario() {\n  _s();\n\n  function calcularImc(event) {\n    event.preventDefault();\n    var n_altura = Number(document.getElementById(\"altura\")) / 100;\n    var n_peso = Number(document.getElementById(\"peso\")); // const target = event.target\n    // const altura = target.altura\n\n    debugger;\n    var x = Imc(n_altura, n_peso);\n    console.log(x);\n  }\n\n  const [imcFormValues, setImcFormValues] = useState({\n    altura: \"0\",\n    peso: \"0\"\n  });\n\n  const handleChangeAltura = altura => {\n    setImcFormValues({\n      altura,\n      peso: imcFormValues.peso\n    });\n  };\n\n  const handleChangePeso = peso => {\n    setImcFormValues({\n      altura: imcFormValues.altura,\n      peso\n    });\n  };\n\n  const altura = \"altura\";\n  const peso = \"peso\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: calcularImc,\n    children: [/*#__PURE__*/_jsxDEV(CampoTexto, {\n      for: altura,\n      id: altura,\n      name: altura,\n      text: \"Altura (cm):\",\n      onChange: handleChangeAltura\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CampoTexto, {\n      for: peso,\n      id: peso,\n      name: peso,\n      text: \"Peso (kg):\",\n      onChange: handleChangePeso\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Calcular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Formulario, \"0OGtfqyNiDg5dW/p8JvK31XD6FA=\");\n\n_c2 = Formulario;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Imc\");\n$RefreshReg$(_c2, \"Formulario\");","map":{"version":3,"sources":["/home/bridge/Documents/poc-bridge/src/components/Formulario.tsx"],"names":["React","useState","CampoTexto","Imc","altura","peso","Formulario","calcularImc","event","preventDefault","n_altura","Number","document","getElementById","n_peso","x","console","log","imcFormValues","setImcFormValues","handleChangeAltura","handleChangePeso"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,SAASC,GAAT,CAAaC,MAAb,EAA6BC,IAA7B,EAA2C;AACzC,SACED,MAAM,GAAIC,IAAI,IAAI,CADpB;AAGD;;KAJQF,G;AAWT,OAAO,SAASG,UAAT,GAAsB;AAAA;;AAE3B,WAASC,WAAT,CAAqBC,KAArB,EAA8D;AAC5DA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAD,CAAN,GAA4C,GAA3D;AACA,QAAIC,MAAM,GAAGH,MAAM,CAACC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAD,CAAnB,CAH4D,CAI5D;AACA;;AACA;AAEA,QAAIE,CAAC,GAAGZ,GAAG,CAACO,QAAD,EAAWI,MAAX,CAAX;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;;AAED,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAe;AAACG,IAAAA,MAAM,EAAE,GAAT;AAAcC,IAAAA,IAAI,EAAE;AAApB,GAAf,CAAlD;;AAEA,QAAMe,kBAAkB,GAAIhB,MAAD,IAAoB;AAC7Ce,IAAAA,gBAAgB,CAAC;AAACf,MAAAA,MAAD;AAASC,MAAAA,IAAI,EAAEa,aAAa,CAACb;AAA7B,KAAD,CAAhB;AACD,GAFD;;AAIA,QAAMgB,gBAAgB,GAAIhB,IAAD,IAAkB;AACzCc,IAAAA,gBAAgB,CAAC;AAACf,MAAAA,MAAM,EAAEc,aAAa,CAACd,MAAvB;AAA+BC,MAAAA;AAA/B,KAAD,CAAhB;AACD,GAFD;;AAIA,QAAMD,MAAM,GAAG,QAAf;AACA,QAAMC,IAAI,GAAG,MAAb;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEE,WAAhB;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,GAAG,EAAEH,MAAjB;AAAyB,MAAA,EAAE,EAAEA,MAA7B;AAAqC,MAAA,IAAI,EAAEA,MAA3C;AAAmD,MAAA,IAAI,EAAC,cAAxD;AAAuE,MAAA,QAAQ,EAAEgB;AAAjF;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,GAAG,EAAEf,IAAjB;AAAuB,MAAA,EAAE,EAAEA,IAA3B;AAAiC,MAAA,IAAI,EAAEA,IAAvC;AAA6C,MAAA,IAAI,EAAC,YAAlD;AAA+D,MAAA,QAAQ,EAAEgB;AAAzE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAjCef,U;;MAAAA,U","sourcesContent":["import React, { useState } from \"react\";\nimport { CampoTexto } from \"./CampoTexto\";\n\nfunction Imc(altura: number, peso: number) {\n  return (\n    altura / (peso ** 2)\n  );\n}\n\ninterface IMCFormModel {\n  altura: string\n  peso: string\n}\n\nexport function Formulario() {\n\n  function calcularImc(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault()\n    var n_altura = Number(document.getElementById(\"altura\")) / 100;\n    var n_peso = Number(document.getElementById(\"peso\"));\n    // const target = event.target\n    // const altura = target.altura\n    debugger\n    \n    var x = Imc(n_altura, n_peso);\n    console.log(x)\n  }\n\n  const [imcFormValues, setImcFormValues] = useState<IMCFormModel>({altura: \"0\", peso: \"0\"})\n\n  const handleChangeAltura = (altura: string) => {\n    setImcFormValues({altura, peso: imcFormValues.peso})\n  }\n\n  const handleChangePeso = (peso: string) => {\n    setImcFormValues({altura: imcFormValues.altura, peso})\n  }\n\n  const altura = \"altura\";\n  const peso = \"peso\";\n  return (\n    <form onSubmit={calcularImc}>\n      <CampoTexto for={altura} id={altura} name={altura} text=\"Altura (cm):\" onChange={handleChangeAltura} />\n      <CampoTexto for={peso} id={peso} name={peso} text=\"Peso (kg):\" onChange={handleChangePeso} />\n      <button type=\"submit\">Calcular</button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}